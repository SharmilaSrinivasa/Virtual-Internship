From 3687a04dc7a6c3bda93478af4d99071b09b94e75 Mon Sep 17 00:00:00 2001
From: SharmilaSrinivasa <seenusharmila@gmail.com>
Date: Tue, 5 May 2020 03:31:31 -0500
Subject: [PATCH] Create Patch File

---
 0001-Create-Patch-File.patch | 119 +++++++++++++++++++++++++++++++++++++++++++
 client.py                    |   3 +-
 client.pyc                   | Bin 1569 -> 1470 bytes
 client_test.py               |  20 +++++++-
 4 files changed, 138 insertions(+), 4 deletions(-)
 create mode 100644 0001-Create-Patch-File.patch

diff --git a/0001-Create-Patch-File.patch b/0001-Create-Patch-File.patch
new file mode 100644
index 0000000..70c50ba
--- /dev/null
+++ b/0001-Create-Patch-File.patch
@@ -0,0 +1,119 @@
+From b4deaebd0750da70b9ebbbe0ab42385b8906ebe8 Mon Sep 17 00:00:00 2001
+From: SharmilaSrinivasa <seenusharmila@gmail.com>
+Date: Tue, 5 May 2020 03:05:23 -0500
+Subject: [PATCH] Create Patch File
+
+---
+ client.py      |  11 ++++++++---
+ client.pyc     | Bin 0 -> 1569 bytes
+ client_test.py |  15 +++++++++++++--
+ 3 files changed, 21 insertions(+), 5 deletions(-)
+ create mode 100644 client.pyc
+
+diff --git a/client.py b/client.py
+index 40badcd..2e08ecc 100644
+--- a/client.py
++++ b/client.py
+@@ -35,14 +35,17 @@ def getDataPoint(quote):
+ 	stock = quote['stock']
+ 	bid_price = float(quote['top_bid']['price'])
+ 	ask_price = float(quote['top_ask']['price'])
+-	price = bid_price
++	price = (bid_price + ask_price)/2
+ 	return stock, bid_price, ask_price, price
+ 
+ def getRatio(price_a, price_b):
+ 	""" Get ratio of price_a and price_b """
++	if(price_b == 0):return
++	return price_a/price_b
+ 	""" ------------- Update this function ------------- """
+ 	""" Also create some unit tests for this function in client_test.py """
+-	return 1
++	self.assertEqual(getDataPoint(quote), dataPoint)
++	self.assertEqual(1,1)
+ 
+ # Main
+ if __name__ == "__main__":
+@@ -52,8 +55,10 @@ if __name__ == "__main__":
+ 		quotes = json.loads(urllib2.urlopen(QUERY.format(random.random())).read())
+ 
+ 		""" ----------- Update to get the ratio --------------- """
++		prices = {}
+ 		for quote in quotes:
+ 			stock, bid_price, ask_price, price = getDataPoint(quote)
++			prices[stock] = price
+ 			print "Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price)
+ 
+-		print "Ratio %s" % getRatio(price, price)
++		print "Ratio %s" % getRatio(prices['ABC'], prices['DEF'])
+diff --git a/client.pyc b/client.pyc
+new file mode 100644
+index 0000000000000000000000000000000000000000..81a60269cf4de98f67f600fa65d4b7d4ff711168
+GIT binary patch
+literal 1569
+zcmcIkUvC>l5TCufII-)bY5sxV7Nm-+gt?ZdDr$i?2`NZKsiRPFqCK5&*YP>$JLh(d
+zQq_41-=ZI&FTC)9_!RICzgas4@m}A~?9A-W?9Ojy?f<#j`lIvvtBe-EWz64z%&H(#
+z7=j9-_`NJB7B_Z}V(&)wDfUUh5|DztL@J<P;n*Ox<b-9?E2J89?or(om%ov2l3t=~
+zLHjS?Qrsf#(dZUwqEVZ4K%-UCK8<|3Cf<ZGT3g8RZORdPoh}bZ--iEVitmtakiNtF
+zehw(!pm>wwEsD2EW2}?jphpUK*dV=0dW)@tfOZa_UA&_gYK1h`)=4#~!&8eo*PdHF
+zqZg$^;Uv5TSn|K|J2Ia@99lcsjiRE;(qdQ{yZi9|!~4<2RM)S+&eh{LSNUInFayyN
+zC;;t&%rV%^h3s4jvUA0w4q)rx_E+AGE%?{w)6AopPagry?W=%hVqusCoW@Dm;K;jR
+z^0=<lG}AII3Rw-L9co!>t+bNAq{UPlX)AfAOI@cHo1{u@I;rx~O3Sx2w#v>eH-W7t
+zNk3Q4I;rzazqh95Jom68<kZ~ypr}$CvcFR=rj^w_Xk?pUh?2}Bum<nB)^jm<SIEqq
+zf<>oB*CsN<v>xZtew9tfy0j)b%<Z#jKl(AR?KCaA-<4L^r5Wav?xe0pI<pU=?~i}j
+z>sp-+yB0@uA4FM^!}p8HYuiTTGi~>g>ak0ek86RE-x6E+)<njaVe&z)Oiv&HX7oRI
+z>?Zg22|59lgLV4^bsM32C>A;tLO^I3F}I?U7_5g}b@M5hJk(YK^St7!I5?72rlnfQ
+zeTkMPI?5T;Ih4*<7X!<Uml_~r4=#{?Zv}eKq0NAD1zlPp-``bf5&l1N-(mcrf#!<=
+z=pLte5AqyjuT9Hh#orN@*OO$N=4FzY&!9Z#PEqo%k*Sp-8fEvc`COuYZgy!vx@XwY
+zMa5PCPW0sIo}2d%z72PvyHuxjQRMwEQ41LIv3A19RHfzTQ3LF1>>Bj>=|S%&%Sa#1
+z!CYgH`R&SdtdqofT*3wE@V><Pq0N=KIjWkVy*Tios>i8yht)b&&gPzgaiYt@xO%xa
+z(PN(;Ke7M4fDon+`3yL}M`Qdu6#A=eK1zbMh5P)5-|(8vW~=RQimu-ftKwtP5*_a!
+Dl&M=y
+
+literal 0
+HcmV?d00001
+
+diff --git a/client_test.py b/client_test.py
+index a608a01..65ae348 100644
+--- a/client_test.py
++++ b/client_test.py
+@@ -1,5 +1,6 @@
+ import unittest
+ from client import getDataPoint
++from client import getRatio
+ 
+ class ClientTest(unittest.TestCase):
+   def test_getDataPoint_calculatePrice(self):
+@@ -8,6 +9,8 @@ class ClientTest(unittest.TestCase):
+       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+     ]
+     """ ------------ Add the assertion below ------------ """
++    for quote in quotes:
++      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+ 
+   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+     quotes = [
+@@ -15,10 +18,18 @@ class ClientTest(unittest.TestCase):
+       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+     ]
+     """ ------------ Add the assertion below ------------ """
++    for quote in quotes:
++        self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+ 
++  def test_getRatio_WithNonZeroDenominator(self):
++    price_a = 121.68
++    price_b = 119.2
++    self.assertEqual(getRatio(price_a, price_b), (price_a/price_b))
+ 
+-  """ ------------ Add more unit tests ------------ """
+-
++  def test_getRatio_WithZeroDenominator(self):
++		price_a = 1
++		price_b = 0
++		self.assertEqual(getRatio(price_a, price_b), None )
+ 
+ 
+ if __name__ == '__main__':
+-- 
+2.15.0
+
diff --git a/client.py b/client.py
index 2e08ecc..325d31c 100644
--- a/client.py
+++ b/client.py
@@ -44,8 +44,7 @@ def getRatio(price_a, price_b):
 	return price_a/price_b
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	self.assertEqual(getDataPoint(quote), dataPoint)
-	self.assertEqual(1,1)
+
 
 # Main
 if __name__ == "__main__":
diff --git a/client.pyc b/client.pyc
index 81a60269cf4de98f67f600fa65d4b7d4ff711168..5a2325c3b5133b5ba5d5eb9bfe541ffe12ce90ef 100644
GIT binary patch
delta 108
zcmZ3;vyYpN`7<xqVTFxs+|24s3=9m;KwK;VBx)ELQWzPsnHY)$7*d!Rf@{D+qQM%>
zlM|T@ST%r37$%=#p3KPxVlnYBuuRTjna#+(nS+&sQIL~|S(s6mnT?T`QG$_+QIZJ&
D^g9pT

delta 207
zcmXAhF$%&^5JYGH#u$GRK}69T*a((_m56;vP7p{0HAXbw&MrszrIm#T5PNUpDZGHI
z!tOBh80P6;1DD^Sehu%g&k+My$X9cbGa(~v6^>nG3P~yGM|+6@HUy(!7_}G&wF3QV
z#*q8wkz=PknXO62Mhy|^$#!0>j4vjws{Ck{hf`X_p5*vfX^G2HlScb>Y3z<|sD(fU
cXp+Z$+j1_{e%u_7Iy&GkjoGD;2Bc}IKE}=>x&QzG

diff --git a/client_test.py b/client_test.py
index 65ae348..2789fbe 100644
--- a/client_test.py
+++ b/client_test.py
@@ -27,9 +27,25 @@ class ClientTest(unittest.TestCase):
     self.assertEqual(getRatio(price_a, price_b), (price_a/price_b))
 
   def test_getRatio_WithZeroDenominator(self):
-		price_a = 1
+		price_a = 121.68
 		price_b = 0
-		self.assertEqual(getRatio(price_a, price_b), None )
+		self.assertEqual(getRatio(price_a, price_b), None)
+
+  """ ------------ improvements to uint test ------------ """
+  def test_getRatio_ZeroAsResult(self):
+		price_a = 0
+		price_b = 121.68
+		self.assertEqual(getRatio(price_a, price_b), 0)
+
+  def test_getRatio_OneAsResult(self):
+		price_a = 121.68
+		price_b = 121.68
+		self.assertEqual(getRatio(price_a, price_b), 1)
+
+  def test_getRatio_NumeratorLessThanDenominator(self):
+		price_a = 119.2
+		price_b = 121.68
+		self.assertLess(getRatio(price_a, price_b), 1)
 
 
 if __name__ == '__main__':
-- 
2.15.0

